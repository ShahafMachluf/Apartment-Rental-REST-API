// <auto-generated />
using System;
using ApartmentRentalService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ApartmentRentalService.Migrations
{
    [DbContext(typeof(ReservationContext))]
    partial class ReservationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-preview.7.20365.15");

            modelBuilder.Entity("ApartmentRentalService.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("ApartmentRentalService.Models.Apartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfTimesReserved")
                        .HasColumnType("int")
                        .HasColumnName("times reserved");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Apartments");
                });

            modelBuilder.Entity("ApartmentRentalService.Models.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("ApartmentRentalService.Models.Host", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ApartmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentId");

                    b.ToTable("Hosts");
                });

            modelBuilder.Entity("ApartmentRentalService.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("ArrivingDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Arriving date");

                    b.Property<DateTime>("LeavingDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Leaving date");

                    b.Property<int>("ReservationGuestId")
                        .HasColumnType("int")
                        .HasColumnName("Guest id");

                    b.Property<int>("ReservationHostId")
                        .HasColumnType("int")
                        .HasColumnName("Host id");

                    b.HasKey("Id");

                    b.HasIndex("ReservationGuestId");

                    b.HasIndex("ReservationHostId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("ApartmentRentalService.Models.Apartment", b =>
                {
                    b.HasOne("ApartmentRentalService.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApartmentRentalService.Models.Host", b =>
                {
                    b.HasOne("ApartmentRentalService.Models.Apartment", "Apartment")
                        .WithMany()
                        .HasForeignKey("ApartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApartmentRentalService.Models.Reservation", b =>
                {
                    b.HasOne("ApartmentRentalService.Models.Guest", "ReservationGuest")
                        .WithMany()
                        .HasForeignKey("ReservationGuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApartmentRentalService.Models.Host", "ReservationHost")
                        .WithMany()
                        .HasForeignKey("ReservationHostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
